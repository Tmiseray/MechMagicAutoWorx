/mechanics/accounts:
  post:
    tags:
      - MechanicAccount
    summary: Create a new mechanic account
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/definitions/MechanicAccount"
    responses:
      201:
        description: Mechanic account created
      400:
        description: Validation error or duplicate email

  put:
    tags:
      - MechanicAccount
    summary: Update mechanic account (token required)
    parameters:
      - in: query
        name: id
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/definitions/MechanicAccountUpdate'
    responses:
      200:
        description: Mechanic account updated
      404:
        description: Mechanic or account not found

  delete:
    tags:
      - MechanicAccount
    summary: Delete mechanic account (token required)
    parameters:
      - in: query
        name: id
        required: true
        schema:
          type: integer
    responses:
      200:
        description: Mechanic account deleted
      404:
        description: Mechanic or account not found

  get:
    tags:
      - MechanicAccount
    summary: Get a specific mechanic account (token required)
    parameters:
      - in: query
        name: id
        required: true
        schema:
          type: integer
    responses:
      200:
        description: Mechanic account found
      404:
        description: Mechanic or account not found

/mechanics/accounts/login:
  post:
    tags:
      - MechanicAccount
    summary: Mechanic Login
    description: Authenticates a mechanic using email and password and returns a JWT token.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
    responses:
      200:
        description: Login successful, returns JWT token
      400:
        description: Invalid request format
      401:
        description: Invalid credentials

/mechanics/accounts/all:
  get:
    tags:
      - MechanicAccount
    summary: Get all mechanic accounts (mechanic token required)
    parameters:
      - in: query
        name: page
        schema:
          type: integer
      - in: query
        name: per_page
        schema:
          type: integer
    responses:
      200:
        description: List of mechanic accounts